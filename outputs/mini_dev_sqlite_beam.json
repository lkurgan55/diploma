[
  {
    "id": 0,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What is the ratio of customers who pay in EUR against customers who pay in CZK?",
    "gold_sql": "select cast(sum(iif(currency = 'eur', 1, 0)) as float) / sum(iif(currency = 'czk', 1, 0)) as ratio from customers",
    "pred_sql": "select (select count(*) from transactions_1k where currency='eur')/(select count(*) from transactions_1k where currency='czk')"
  },
  {
    "id": 1,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "In 2012, who had the least consumption in LAM?",
    "gold_sql": "select t1.customerid from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where t1.segment = 'lam' and substr(t2.date, 1, 4) = '2012' group by t1.customerid order by sum(t2.consumption) asc limit 1",
    "pred_sql": "select c.customerid, y.date, y.consumption from yearmonth y join customers c on y.customerid = c.customerid where y.date like '2012%' and c.segment = 'lam' order by y.consumption limit 1"
  },
  {
    "id": 2,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "What was the average monthly consumption of customers in SME for the year 2013?",
    "gold_sql": "select avg(t2.consumption) / 12 from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where substr(t2.date, 1, 4) = '2013' and t1.segment = 'sme'",
    "pred_sql": "select avg(consumption) from yearmonth where customerid in (select customerid from customers where segment = 'sme') and date like '2013%'"
  },
  {
    "id": 3,
    "db_id": "debit_card_specializing",
    "difficulty": "challenging",
    "question": "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "gold_sql": "select sum(iif(t1.currency = 'czk', t2.consumption, 0)) - sum(iif(t1.currency = 'eur', t2.consumption, 0)) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where substr(t2.date, 1, 4) = '2012'",
    "pred_sql": "select sum(case when y.date like '2012%' and c.currency = 'czk' then y.consumption else 0 end) - sum(case when y.date like '2012%' and c.currency = 'eur' then y.consumption else 0 end) as difference from yearmonth y join customers c on y.customerid = c.customerid"
  },
  {
    "id": 4,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "Which year recorded the most consumption of gas paid in CZK?",
    "gold_sql": "select substr(t2.date, 1, 4) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where t1.currency = 'czk' group by substr(t2.date, 1, 4) order by sum(t2.consumption) desc limit 1",
    "pred_sql": "select strftime('%y', y.date) as year, sum(y.consumption) as total_consumption from yearmonth y group by strftime('%y', y.date) order by total_consumption desc limit 1"
  },
  {
    "id": 5,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "What was the gas consumption peak month for SME customers in 2013?",
    "gold_sql": "select substr(t2.date, 5, 2) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where substr(t2.date, 1, 4) = '2013' and t1.segment = 'sme' group by substr(t2.date, 5, 2) order by sum(t2.consumption) desc limit 1",
    "pred_sql": "select max(consumption) from yearmonth where customerid in (select customerid from customers where segment = 'sme') and date like '2013%'"
  },
  {
    "id": 6,
    "db_id": "debit_card_specializing",
    "difficulty": "challenging",
    "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "gold_sql": "select cast(sum(iif(t1.segment = 'sme', t2.consumption, 0)) as real) / count(t1.customerid) - cast(sum(iif(t1.segment = 'lam', t2.consumption, 0)) as real) / count(t1.customerid) , cast(sum(iif(t1.segment = 'lam', t2.consumption, 0)) as real) / count(t1.customerid) - cast(sum(iif(t1.segment = 'kam', t2.consumption, 0)) as real) / count(t1.customerid) , cast(sum(iif(t1.segment = 'kam', t2.consumption, 0)) as real) / count(t1.customerid) - cast(sum(iif(t1.segment = 'sme', t2.consumption, 0)) as real) / count(t1.customerid) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where t1.currency = 'czk' and t2.consumption = ( select min(consumption) from yearmonth ) and t2.date between 201301 and 201312",
    "pred_sql": "select avg(case when ym.date like '2013%' and c.segment='sme' then ym.consumption else 0 end) as sme, avg(case when ym.date like '2013%' and c.segment='lam' then ym.consumption else 0 end) as lam, avg(case when ym.date like '2013%' and c.segment='kam' then ym.consumption else"
  },
  {
    "id": 7,
    "db_id": "debit_card_specializing",
    "difficulty": "challenging",
    "question": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "gold_sql": "select cast((sum(iif(t1.segment = 'sme' and t2.date like '2013%', t2.consumption, 0)) - sum(iif(t1.segment = 'sme' and t2.date like '2012%', t2.consumption, 0))) as float) * 100 / sum(iif(t1.segment = 'sme' and t2.date like '2012%', t2.consumption, 0)), cast(sum(iif(t1.segment = 'lam' and t2.date like '2013%', t2.consumption, 0)) - sum(iif(t1.segment = 'lam' and t2.date like '2012%', t2.consumption, 0)) as float) * 100 / sum(iif(t1.segment = 'lam' and t2.date like '2012%', t2.consumption, 0)) , cast(sum(iif(t1.segment = 'kam' and t2.date like '2013%', t2.consumption, 0)) - sum(iif(t1.segment = 'kam' and t2.date like '2012%', t2.consumption, 0)) as float) * 100 / sum(iif(t1.segment = 'kam' and t2.date like '2012%', t2.consumption, 0)) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid",
    "pred_sql": "with segment_consumption as ( select s.segment, ym.customerid, ym.date, ym.consumption, lag(ym.consumption, 1, 0) over (partition by ym.customerid, ym.segment order by ym.date) as prev_consumption, (ym.consumption - lag(ym.consumption, 1, 0) over ("
  },
  {
    "id": 8,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "How much did customer 6 consume in total between August and November 2013?",
    "gold_sql": "select sum(consumption) from yearmonth where customerid = 6 and date between '201308' and '201311'",
    "pred_sql": "select sum(consumption) from yearmonth where customerid = 6 and date between '2013-08-01' and '2013-11-30'"
  },
  {
    "id": 9,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "gold_sql": "select sum(iif(country = 'cze', 1, 0)) - sum(iif(country = 'svk', 1, 0)) from gasstations where segment = 'discount'",
    "pred_sql": "select (select count(*) from gasstations where country='cze' and segment='discount') - (select count(*) from gasstations where country='svk' and segment='discount')"
  },
  {
    "id": 10,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "gold_sql": "select sum(currency = 'czk') - sum(currency = 'eur') from customers where segment = 'sme'",
    "pred_sql": "select count(*) from yearmonth where customerid in (select customerid from customers where segment = 'sme' and currency = 'czk') - count(*) from yearmonth where customerid in (select customerid from customers where segment = 'sme' and currency = 'eur')"
  },
  {
    "id": 11,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "How many percent of LAM customer consumed more than 46.73?",
    "gold_sql": "select cast(sum(iif(t2.consumption > 46.73, 1, 0)) as float) * 100 / count(t1.customerid) from customers as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where t1.segment = 'lam'",
    "pred_sql": "select count(*) * 100.0 / (select count(*) from customers where segment = 'lam') from yearmonth where customerid in (select customerid from customers where segment = 'lam') and consumption > 46.73"
  },
  {
    "id": 12,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "In February 2012, what percentage of customers consumed more than 528.3?",
    "gold_sql": "select cast(sum(iif(consumption > 528.3, 1, 0)) as float) * 100 / count(customerid) from yearmonth where date = '201202'",
    "pred_sql": "select 100.0 * count(*) / (select count(*) from yearmonth where customerid in (select customerid from customers) and strftime('%y-%m', date) = '2012-02') as percentage from yearmonth where customerid in (select customerid from customers) and strftime('%y-%m', date) = '2012-02' and consumption > 528.3"
  },
  {
    "id": 13,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What is the highest monthly consumption in the year 2012?",
    "gold_sql": "select sum(consumption) from yearmonth where substr(date, 1, 4) = '2012' group by substr(date, 5, 2) order by sum(consumption) desc limit 1",
    "pred_sql": "select max(consumption) from yearmonth where date like '2012-%'"
  },
  {
    "id": 14,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "Please list the product description of the products consumed in September, 2013.",
    "gold_sql": "select t3.description from transactions_1k as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid inner join products as t3 on t1.productid = t3.productid where t2.date = '201309'",
    "pred_sql": "select description from products where productid in (select productid from transactions_1k where strftime('%y-%m', date) = '2013-09' group by productid)"
  },
  {
    "id": 15,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "gold_sql": "select distinct t2.country from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid inner join yearmonth as t3 on t1.customerid = t3.customerid where t3.date = '201306'",
    "pred_sql": "select country from gasstations where gasstationid in ( select gasstationid from transactions_1k where strftime('%y-%m', date) = '2013-06' )"
  },
  {
    "id": 16,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "gold_sql": "select count(*) from yearmonth as t1 inner join customers as t2 on t1.customerid = t2.customerid where t2.currency = 'eur' and t1.consumption > 1000.00",
    "pred_sql": "with euro_customers as (select customerid from customers where currency = 'eur') select count(*) from euro_customers ec join yearmonth ym on ec.customerid = ym.customerid where ym.consumption > 1000"
  },
  {
    "id": 17,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "gold_sql": "select distinct t3.description from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid inner join products as t3 on t1.productid = t3.productid where t2.country = 'cze'",
    "pred_sql": "select p.description from transactions_1k t join gasstations g on t.gasstationid = g.gasstationid where g.country = 'cze' join products p on t.productid = p.productid"
  },
  {
    "id": 18,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "gold_sql": "select distinct t1.time from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid where t2.chainid = 11",
    "pred_sql": "select time from transactions_1k where gasstationid in (select gasstationid from gasstations where chainid = 11)"
  },
  {
    "id": 19,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "gold_sql": "select count(t1.transactionid) from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid where t2.country = 'cze' and strftime('%y', t1.date) >= '2012'",
    "pred_sql": "select count(*) from transactions_1k where date > '2012-01-01' and gasstationid in (select gasstationid from gasstations where country = 'cze')"
  },
  {
    "id": 20,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "gold_sql": "select distinct t3.currency from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid inner join customers as t3 on t1.customerid = t3.customerid where t1.date = '2012-08-24' and t1.time = '16:25:00'",
    "pred_sql": "select currency from customers where customerid in (select customerid from transactions_1k where date='2012-08-24' and time='16:25:00')"
  },
  {
    "id": 21,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What segment did the customer have at 2012/8/23 21:20:00?",
    "gold_sql": "select t2.segment from transactions_1k as t1 inner join customers as t2 on t1.customerid = t2.customerid where t1.date = '2012-08-23' and t1.time = '21:20:00'",
    "pred_sql": "select segment from customers where customerid in (select customerid from \"transactions_1k\" where date='2012-08-23' and time='21:20:00')"
  },
  {
    "id": 22,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "gold_sql": "select count(t1.transactionid) from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid where t1.date = '2012-08-26' and t1.time between '08:00:00' and '09:00:00' and t2.country = 'cze'",
    "pred_sql": "select count(*) from transactions_1k where strftime('%y-%m-%d %h:%m:00', date||' '||time) between '2012-08-26 08:00:00' and '2012-08-26 09:00:00' and gasstationid in (select gasstationid from gasstations where country='cze')"
  },
  {
    "id": 23,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "gold_sql": "select t2.country from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid where t1.date = '2012-08-24' and t1.price = 548.4",
    "pred_sql": "select c.country from yearmonth y join customers c on y.customerid = c.customerid where y.date = '2012-08-24' and y.consumption = 548.4"
  },
  {
    "id": 24,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What is the percentage of the customers who used EUR in 2012/8/25?",
    "gold_sql": "select cast(sum(iif(t2.currency = 'eur', 1, 0)) as float) * 100 / count(t1.customerid) from transactions_1k as t1 inner join customers as t2 on t1.customerid = t2.customerid where t1.date = '2012-08-25'",
    "pred_sql": "select 100.0 * count(*) / (select count(*) from customers where segment = 'sme' and currency = 'eur') from yearmonth where date = '2012-08-25' and customerid in (select customerid from customers where segment = 'sme' and currency = 'eur')"
  },
  {
    "id": 25,
    "db_id": "debit_card_specializing",
    "difficulty": "challenging",
    "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "gold_sql": "select cast(sum(iif(substring(date, 1, 4) = '2012', consumption, 0)) - sum(iif(substring(date, 1, 4) = '2013', consumption, 0)) as float) / sum(iif(substring(date, 1, 4) = '2012', consumption, 0)) from yearmonth where customerid = ( select t1.customerid from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid where t1.date = '2012-08-25' and t1.price = 1513.12 )",
    "pred_sql": "select (select consumption from yearmonth where customerid = (select customerid from transactions_1k where date = '2012-08-25' and amount = 634.8) and date = '201207') - (select consumption from yearmonth where customerid = (select customerid from transactions_1k where date = '2012-08-25' and amount = 634.8) and date = '201302') / (select consumption from yearmonth where"
  },
  {
    "id": 26,
    "db_id": "debit_card_specializing",
    "difficulty": "simple",
    "question": "What is the percentage of \"premium\" against the overall segment in Country = \"SVK\"?",
    "gold_sql": "select cast(sum(iif(country = 'svk' and segment = 'premium', 1, 0)) as float) * 100 / sum(iif(country = 'svk', 1, 0)) from gasstations",
    "pred_sql": "select (select count(*) from gasstations where country = 'cze' and segment = 'premium') / (select count(*) from gasstations where country = 'cze') * 100"
  },
  {
    "id": 27,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "gold_sql": "select sum(t1.price ) , sum(iif(t3.date = '201201', t1.price, 0)) from transactions_1k as t1 inner join gasstations as t2 on t1.gasstationid = t2.gasstationid inner join yearmonth as t3 on t1.customerid = t3.customerid where t1.customerid = '38508'",
    "pred_sql": "select sum(amount) from transactions_1k where customerid = 38508"
  },
  {
    "id": 28,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "gold_sql": "select t2.customerid, sum(t2.price / t2.amount), t1.currency from customers as t1 inner join transactions_1k as t2 on t1.customerid = t2.customerid where t2.customerid = ( select customerid from yearmonth order by consumption desc limit 1 ) group by t2.customerid, t1.currency",
    "pred_sql": "with top_customer as ( select c.customerid, sum(t.amount) as total_spent from transactions_1k t join customers c on t.customerid = c.customerid group by c.customerid order by total_spent desc limit 1 ) select c.currency, avg(t.price) as avg_price from top_customer tc join transactions_1k t on tc.customerid = t.customerid join customers c on t.customer"
  },
  {
    "id": 29,
    "db_id": "debit_card_specializing",
    "difficulty": "moderate",
    "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "gold_sql": "select t2.consumption from transactions_1k as t1 inner join yearmonth as t2 on t1.customerid = t2.customerid where t1.price / t1.amount > 29.00 and t1.productid = 5 and t2.date = '201208'",
    "pred_sql": "select ym.customerid, ym.date, ym.consumption from yearmonth ym where ym.customerid in (select t.customerid from transactions_1k t where t.productid = 5 and t.price > 29.00) and ym.date like '2012-08-%'"
  },
  {
    "id": 30,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What's Angela Sanders's major?",
    "gold_sql": "select t2.major_name from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t1.first_name = 'angela' and t1.last_name = 'sanders'",
    "pred_sql": "select link_to_major from member where member_id ='rec1x5zbfiqooupw8'"
  },
  {
    "id": 31,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "gold_sql": "select count(t1.event_id) from event as t1 inner join attendance as t2 on t1.event_id = t2.link_to_event inner join member as t3 on t2.link_to_member = t3.member_id where t1.event_name = 'women''s soccer' and t3.t_shirt_size = 'medium'",
    "pred_sql": "select count(*) from attendance join event on attendance.link_to_event = event.event_id join member on attendance.link_to_member = member.member_id where event.event_name = 'women''s soccer' and member.t_shirt_size = 'medium'"
  },
  {
    "id": 32,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "gold_sql": "select t1.event_name from event as t1 inner join attendance as t2 on t1.event_id = t2.link_to_event group by t1.event_id having count(t2.link_to_event) > 10 except select t1.event_name from event as t1 where t1.type = 'meeting'",
    "pred_sql": "select count(*) from event where event_id in (select link_to_event from attendance where link_to_event in (select link_to_event from attendance group by link_to_event having count(*) > 10) and type = 'meeting')"
  },
  {
    "id": 33,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "List all the names of events that had an attendance of over 20 students but were not fundraisers.",
    "gold_sql": "select t1.event_name from event as t1 inner join attendance as t2 on t1.event_id = t2.link_to_event group by t1.event_id having count(t2.link_to_event) > 20 except select t1.event_name from event as t1 where t1.type = 'fundraiser'",
    "pred_sql": "select distinct e.event_name from event e join attendance a on e.event_id = a.link_to_event where a.link_to_event in (select link_to_event from attendance group by link_to_event having count(*) > 20) and e.type!= 'fundraiser'"
  },
  {
    "id": 34,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What is the amount of the funds that the Vice President received?",
    "gold_sql": "select t2.amount from member as t1 inner join income as t2 on t1.member_id = t2.link_to_member where t1.position = 'vice president'",
    "pred_sql": "select sum(amount) from income where link_to_member in (select member_id from member where position = 'vice president') and source = 'dues'"
  },
  {
    "id": 35,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "List the full name of the Student_Club members that grew up in Illinois state.",
    "gold_sql": "select t1.first_name, t1.last_name from member as t1 inner join zip_code as t2 on t1.zip = t2.zip_code where t2.state = 'illinois'",
    "pred_sql": "select m.first_name ||'' || m.last_name as full_name from member m join zip_code z on m.zip = z.zip_code where z.state = 'illinois'"
  },
  {
    "id": 36,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Was each expense in October Meeting on October 8, 2019 approved?",
    "gold_sql": "select t3.approved from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget where t1.event_name = 'october meeting' and t1.event_date like '2019-10-08%'",
    "pred_sql": "select * from expense where expense_date = '2019-10-08' and expense_description like '%october meeting%' and approved = 'true'"
  },
  {
    "id": 37,
    "db_id": "student_club",
    "difficulty": "challenging",
    "question": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "gold_sql": "select avg(t2.cost) from member as t1 inner join expense as t2 on t1.member_id = t2.link_to_member where t1.last_name = 'allen' and t1.first_name = 'elijah' and (substr(t2.expense_date, 6, 2) = '09' or substr(t2.expense_date, 6, 2) = '10')",
    "pred_sql": "select avg(cost) from expense where link_to_member ='recd078pns3x2dobe' and expense_date between '2019-09-01' and '2019-10-31'"
  },
  {
    "id": 38,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "gold_sql": "select sum(case when substr(t1.event_date, 1, 4) = '2019' then t2.spent else 0 end) - sum(case when substr(t1.event_date, 1, 4) = '2020' then t2.spent else 0 end) as num from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event",
    "pred_sql": "select sum(case when extract(year from event_date) = 2019 then spent else 0 end) - sum(case when extract(year from event_date) = 2020 then spent else 0 end) as difference from budget where link_to_event in (select event_id from event where extract(year from event_date) in (2019, 2020)) and event_status = 'closed'"
  },
  {
    "id": 39,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What was the notes of the fundraising on 2019/9/14?",
    "gold_sql": "select notes from income where source = 'fundraising' and date_received = '2019-09-14'",
    "pred_sql": "select notes from event where event_date = '2019-09-14' and type = 'fundraising'"
  },
  {
    "id": 40,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "Tell the phone number of \"Carlo Jacobs\".",
    "gold_sql": "select phone from member where first_name = 'carlo' and last_name = 'jacobs'",
    "pred_sql": "select phone from member where first_name = 'carlo' and last_name = 'jacobs'"
  },
  {
    "id": 41,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "gold_sql": "select t1.event_status from budget as t1 inner join expense as t2 on t1.budget_id = t2.link_to_budget where t2.expense_description = 'post cards, posters' and t2.expense_date = '2019-08-20'",
    "pred_sql": "select status from event where event_id = (select link_to_event from expense where expense_description = 'post cards, posters' and expense_date = '2019-08-20')"
  },
  {
    "id": 42,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What was Brent Thomason's major?",
    "gold_sql": "select t2.major_name from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t1.first_name = 'brent' and t1.last_name = 'thomason'",
    "pred_sql": "select m.major_name from member m join major ma on m.link_to_major = ma.major_id where m.member_id ='rec28orzgcm1dtqbz'"
  },
  {
    "id": 43,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "For all the club members from \"Business\" major, how many of them wear medium size t-shirt?",
    "gold_sql": "select count(t1.member_id) from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t2.major_name = 'business' and t1.t_shirt_size = 'medium'",
    "pred_sql": "select count(*) from member where link_to_major ='rec06df6vz1cypkpc' and t_shirt_size = 'medium'"
  },
  {
    "id": 44,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "Which department was the President of the club in?",
    "gold_sql": "select t2.department from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t1.position = 'president'",
    "pred_sql": "select m.department from member m join attendance a on m.member_id = a.link_to_member join event e on a.link_to_event = e.event_id where e.event_name = 'officers meeting - january' and m.position = 'president'"
  },
  {
    "id": 45,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "State the date Connor Hilton paid his/her dues.",
    "gold_sql": "select t2.date_received from member as t1 inner join income as t2 on t1.member_id = t2.link_to_member where t1.first_name = 'connor' and t1.last_name = 'hilton' and t2.source = 'dues'",
    "pred_sql": "select date_received from income where link_to_member ='rec28orzgcm1dtqbz' and source = 'dues'"
  },
  {
    "id": 46,
    "db_id": "student_club",
    "difficulty": "challenging",
    "question": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "gold_sql": "select cast(sum(case when t2.event_name = 'yearly kickoff' then t1.amount else 0 end) as real) / sum(case when t2.event_name = 'october meeting' then t1.amount else 0 end) from budget as t1 inner join event as t2 on t1.link_to_event = t2.event_id where t1.category = 'advertisement' and t2.type = 'meeting'",
    "pred_sql": "select count(*) from budget where category = 'advertisement' and event_status = 'closed' and link_to_event in (select event_id from event where event_name = 'yearly kickoff') and spent > (select avg(spent) from budget where category = 'advertisement' and event_status = 'closed' and link_to_event in (select event_id from event where event_name = 'october meeting'))"
  },
  {
    "id": 47,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What is the total cost of the pizzas for all the events?",
    "gold_sql": "select sum(cost) from expense where expense_description = 'pizza'",
    "pred_sql": "select sum(cost) from expense where expense_description like '%pizza%' and link_to_budget in (select link_to_event from budget where event_status = 'closed')"
  },
  {
    "id": 48,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "How many cities are there in Orange County, Virginia?",
    "gold_sql": "select count(city) from zip_code where county = 'orange county' and state = 'virginia'",
    "pred_sql": "select city from zip_code where county = 'orange county' and state = 'virginia'"
  },
  {
    "id": 49,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What does the person with the phone number \"809-555-3360\" major in?",
    "gold_sql": "select t2.major_name from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t1.phone = '809-555-3360'",
    "pred_sql": "select major_name from major join member on major.major_id = member.link_to_major where phone = '809-555-3360'"
  },
  {
    "id": 50,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "How many members attended the \"Women's Soccer\" event?",
    "gold_sql": "select count(t2.link_to_member) from event as t1 inner join attendance as t2 on t1.event_id = t2.link_to_event where t1.event_name = 'women''s soccer'",
    "pred_sql": "select count(*) from attendance where link_to_event in (select event_id from event where event_name = 'women''s soccer')"
  },
  {
    "id": 51,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "gold_sql": "select t1.first_name, t1.last_name from member as t1 inner join major as t2 on t1.link_to_major = t2.major_id where t2.department = 'school of applied sciences, technology and education'",
    "pred_sql": "select * from member where link_to_major in (select major_id from major where department = 'school of applied sciences, technology and education')"
  },
  {
    "id": 52,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "gold_sql": "select t2.event_name from budget as t1 inner join event as t2 on t1.link_to_event = t2.event_id where t2.status = 'closed' order by t1.spent / t1.amount desc limit 1",
    "pred_sql": "with closed_events as ( select link_to_event, sum(spent) as total_spent, sum(amount) as total_budget from budget where event_status = 'closed' group by link_to_event ) select link_to_event, total_spent / total_budget as spend_to_budget_ratio from closed_events order by spend_to_budget_ratio desc limit 1"
  },
  {
    "id": 53,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What is the highest amount of budget spend for an event?",
    "gold_sql": "select max(spent) from budget",
    "pred_sql": "select max(spent) from budget"
  },
  {
    "id": 54,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "What is the total amount of money spent for food?",
    "gold_sql": "select sum(spent) from budget where category = 'food'",
    "pred_sql": "select sum(spent) from budget where category = 'food'"
  },
  {
    "id": 55,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "List the name of students that have attended more than 7 events.",
    "gold_sql": "select t1.first_name, t1.last_name from member as t1 inner join attendance as t2 on t1.member_id = t2.link_to_member group by t2.link_to_member having count(t2.link_to_event) > 7",
    "pred_sql": "select distinct m.first_name, m.last_name from member m join attendance a on m.member_id = a.link_to_member group by m.member_id, m.first_name, m.last_name having count(a.link_to_event) > 7"
  },
  {
    "id": 56,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "gold_sql": "select t4.first_name, t4.last_name from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget inner join member as t4 on t3.link_to_member = t4.member_id where t1.event_name = 'yearly kickoff'",
    "pred_sql": "select m.first_name, m.last_name from member m join attendance a on m.member_id = a.link_to_member join event e on a.link_to_event = e.event_id where e.event_name = 'yearly kickoff' and m.position = 'treasurer'"
  },
  {
    "id": 57,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "Which event has the lowest cost?",
    "gold_sql": "select t1.event_name from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget order by t3.cost limit 1",
    "pred_sql": "select e.event_name, e.event_date, e.type, e.notes, e.location, e.status, e.event_id from event e where e.event_id in (select link_to_event from expense order by cost limit 1)"
  },
  {
    "id": 58,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "gold_sql": "select cast(sum(case when t1.event_name = 'yearly kickoff' then t3.cost else 0 end) as real) * 100 / sum(t3.cost) from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget",
    "pred_sql": "with event_cost as ( select sum(cost) as total_cost from expense where link_to_event in ( select event_id from event where extract(year from event_date) = extract(year from (select max(event_date) from event)) ) ) select 100 * sum(cost) / (select total_cost from event_cost) as percentage from expense where link_to_event in ( select event_id from event"
  },
  {
    "id": 59,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "Indicate the top source of funds received in September 2019 based on their amount.",
    "gold_sql": "select source from income where date_received between '2019-09-01' and '2019-09-30' order by source desc limit 1",
    "pred_sql": "select source, sum(amount) as total_amount from income where date_received like '2019-09-%' group by source order by total_amount desc limit 1"
  },
  {
    "id": 60,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "How many members of the Student_Club have major in 'Physics Teaching'?",
    "gold_sql": "select count(t2.member_id) from major as t1 inner join member as t2 on t1.major_id = t2.link_to_major where t1.major_name = 'physics teaching'",
    "pred_sql": "select count(*) from member where link_to_major in (select major_id from major where major_name = 'physics teaching')"
  },
  {
    "id": 61,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Name the event with the highest amount spent on advertisement.",
    "gold_sql": "select t2.event_name from budget as t1 inner join event as t2 on t1.link_to_event = t2.event_id where t1.category = 'advertisement' order by t1.spent desc limit 1",
    "pred_sql": "select e.event_name, b.spent from event e join budget b on e.event_id = b.link_to_event where b.category = 'advertisement' order by b.spent desc limit 1"
  },
  {
    "id": 62,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Did Maya Mclean attend the 'Women's Soccer' event?",
    "gold_sql": "select case when t3.event_name = 'women''s soccer' then 'yes' end as result from member as t1 inner join attendance as t2 on t1.member_id = t2.link_to_member inner join event as t3 on t2.link_to_event = t3.event_id where t1.first_name = 'maya' and t1.last_name = 'mclean'",
    "pred_sql": "select * from attendance where link_to_event in (select event_id from event where event_name = 'women''s soccer') and link_to_member in (select member_id from member where first_name = 'maya' and last_name = 'mclean')"
  },
  {
    "id": 63,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Indicate the cost of posters for 'September Speaker' event.",
    "gold_sql": "select t3.cost from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget where t1.event_name = 'september speaker' and t3.expense_description = 'posters'",
    "pred_sql": "select cost from expense where expense_description like '%posters%' and link_to_event in (select event_id from event where event_name like '%september speaker%')"
  },
  {
    "id": 64,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "gold_sql": "select t2.event_name from budget as t1 inner join event as t2 on t2.event_id = t1.link_to_event where t1.event_status = 'closed' and t1.remaining < 0 order by t1.remaining limit 1",
    "pred_sql": "select e.event_name from event e join budget b on e.event_id = b.link_to_event where b.event_status = 'closed' order by b.spent - b.remaining desc limit 1"
  },
  {
    "id": 65,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "gold_sql": "select t1.type, sum(t3.cost) from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event inner join expense as t3 on t2.budget_id = t3.link_to_budget where t1.event_name = 'october meeting'",
    "pred_sql": "select sum(cost) from expense where link_to_event = (select event_id from event where event_name = 'october meeting') and approved = 'true'"
  },
  {
    "id": 66,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
    "gold_sql": "select t2.category, sum(t2.amount) from event as t1 join budget as t2 on t1.event_id = t2.link_to_event where t1.event_name = 'april speaker' group by t2.category order by sum(t2.amount) asc",
    "pred_sql": "select category, amount from budget where link_to_event in (select event_id from event where event_name = 'april speaker') order by amount"
  },
  {
    "id": 67,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "Mention the total expense used on 8/20/2019.",
    "gold_sql": "select sum(cost) from expense where expense_date = '2019-08-20'",
    "pred_sql": "select sum(cost) from expense where expense_date = '2019-08-20' and approved = 'true'"
  },
  {
    "id": 68,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "gold_sql": "select t1.first_name, t1.last_name, sum(t2.cost) from member as t1 inner join expense as t2 on t1.member_id = t2.link_to_member where t1.member_id = 'rec4bldzhs2blfp4v'",
    "pred_sql": "select m.first_name ||'' || m.last_name as full_name, sum(e.cost) as total_cost from member m join expense e on m.member_id = e.link_to_member where m.member_id ='rec4bldzhs2blfp4v'"
  },
  {
    "id": 69,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "State what kind of expenses that Sacha Harrison incurred?",
    "gold_sql": "select t2.expense_description from member as t1 inner join expense as t2 on t1.member_id = t2.link_to_member where t1.first_name = 'sacha' and t1.last_name = 'harrison'",
    "pred_sql": "select expense_description from expense where link_to_member ='recd078pns3x2dobe'"
  },
  {
    "id": 70,
    "db_id": "student_club",
    "difficulty": "simple",
    "question": "State the category of events were held at MU 215.",
    "gold_sql": "select distinct t2.category from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event where t1.location = 'mu 215'",
    "pred_sql": "select * from event where location = 'mu 215'"
  },
  {
    "id": 71,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "List the last name of members with a major in environmental engineering and include its department and college name.",
    "gold_sql": "select t2.last_name, t1.department, t1.college from major as t1 inner join member as t2 on t1.major_id = t2.link_to_major where t2.position = 'member' and t1.major_name = 'environmental engineering'",
    "pred_sql": "select m.last_name from member m join major ma on m.link_to_major = ma.major_id where ma.department = 'watershed sciences' and ma.college = 'college of natural resources'"
  },
  {
    "id": 72,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "gold_sql": "select distinct t2.category, t1.type from event as t1 inner join budget as t2 on t1.event_id = t2.link_to_event where t1.location = 'mu 215' and t2.spent = 0 and t1.type = 'guest speaker'",
    "pred_sql": "select b.category from budget b join event e on b.link_to_event = e.event_id where e.location = 'mu 215' and b.spent = 0"
  },
  {
    "id": 73,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "gold_sql": "select cast(sum(case when t2.amount = 50 then 1.0 else 0 end) as real) * 100 / count(t2.income_id) from member as t1 inner join income as t2 on t1.member_id = t2.link_to_member where t1.position = 'member' and t1.t_shirt_size = 'medium'",
    "pred_sql": "select (sum(case when m.t_shirt_size = 'medium' and i.amount = 50 then 1 else 0 end) / (select count(*) from member where t_shirt_size = 'medium')) * 100 as percentage from income i join member m on i.link_to_member = m.member_id"
  },
  {
    "id": 74,
    "db_id": "student_club",
    "difficulty": "moderate",
    "question": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "gold_sql": "select distinct event_name from event where type = 'game' and date(substr(event_date, 1, 10)) between '2019-03-15' and '2020-03-20' and status = 'closed'",
    "pred_sql": "select e.event_name as \"game\" from event e where e.status = 'closed' and e.event_date between '2019-03-15' and '2020-03-20'"
  },
  {
    "id": 75,
    "db_id": "student_club",
    "difficulty": "challenging",
    "question": "Give the full name and contact number of members who had to spend more than average on each expense.",
    "gold_sql": "select distinct t3.first_name, t3.last_name, t3.phone from expense as t1 inner join budget as t2 on t1.link_to_budget = t2.budget_id inner join member as t3 on t3.member_id = t1.link_to_member where t1.cost > ( select avg(t1.cost) from expense as t1 inner join budget as t2 on t1.link_to_budget = t2.budget_id inner join member as t3 on t3.member_id = t1.link_to_member )",
    "pred_sql": "with avg_expense as ( select link_to_member, avg(cost) as avg_cost from expense group by link_to_member ) select m.first_name, m.last_name, m.phone from member m join avg_expense ae on m.link_to_member = ae.link_to_member join expense e on m.link_to_member = e.link_to_member where e.cost > ae.avg_cost"
  },
  {
    "id": 76,
    "db_id": "student_club",
    "difficulty": "challenging",
    "question": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "gold_sql": "select t2.first_name, t2.last_name, t1.cost from expense as t1 inner join member as t2 on t1.link_to_member = t2.member_id where t1.expense_description = 'water, veggie tray, supplies'",
    "pred_sql": "select m.first_name ||'' || m.last_name as full_name, sum(e.cost) as total_cost from expense e join member m on e.link_to_member = m.member_id where expense_description like '%water%' or expense_description like '%veggie%' or expense_description like '%supplies%' group by m.first_name, m.last_name"
  },
  {
    "id": 77,
    "db_id": "student_club",
    "difficulty": "challenging",
    "question": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "gold_sql": "select distinct t3.first_name, t3.last_name, t4.amount from event as t1 inner join attendance as t2 on t1.event_id = t2.link_to_event inner join member as t3 on t3.member_id = t2.link_to_member inner join income as t4 on t4.link_to_member = t3.member_id where t4.date_received = '2019-09-09'",
    "pred_sql": "select m.first_name ||'' || m.last_name as full_name, i.amount from income i join member m on i.link_to_member = m.member_id where i.date_received = '2019-09-09' and i.amount > 0"
  },
  {
    "id": 78,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "gold_sql": "select cast(sum(case when admission = '+' then 1 else 0 end) as real) * 100 / sum(case when admission = '-' then 1 else 0 end) from patient where sex = 'm'",
    "pred_sql": "select case when sum(case when admission = '+' then 1 else 0 end) > sum(case when admission = '-' then 1 else 0 end) then 'in-patient' else 'out-patient' end as type, round(((sum(case when admission = '+' then 1 else 0 end) - sum(case when admission = '-' then 1 else 0 end)) / (select count(*) from patient)) *"
  },
  {
    "id": 79,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What is the percentage of female patient were born after 1930?",
    "gold_sql": "select cast(sum(case when strftime('%y', birthday) > '1930' then 1 else 0 end) as real) * 100 / count(*) from patient where sex = 'f'",
    "pred_sql": "select 100.0 * count(case when sex = 'f' and birthday > '1930-01-01' then 1 else null end) / count(*) as percentage from patient"
  },
  {
    "id": 80,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "gold_sql": "select sum(case when admission = '+' then 1.0 else 0 end) / sum(case when admission = '-' then 1 else 0 end) from patient where diagnosis = 'sle'",
    "pred_sql": "select count(case when diagnosis = 'sle' and admission = '+' then 1 else null end) / count(case when diagnosis = 'sle' then 1 else null end) as ratio from patient"
  },
  {
    "id": 81,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "gold_sql": "select t1.diagnosis, t2.date from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.id = 30609",
    "pred_sql": "select diagnosis, date from laboratory where id in (select id from patient where id = 30609)"
  },
  {
    "id": 82,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "gold_sql": "select distinct t1.id, t1.sex, t1.birthday from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.ldh > 500",
    "pred_sql": "select p.id, p.sex, p.birthday from patient p join laboratory l on p.id = l.id where l.ldh > (select avg(ldh) from laboratory)"
  },
  {
    "id": 83,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "State the ID and age of patient with positive degree of coagulation.",
    "gold_sql": "select distinct t1.id, strftime('%y', current_timestamp) - strftime('%y', t1.birthday) from patient as t1 inner join examination as t2 on t1.id = t2.id where t2.rvvt = '+'",
    "pred_sql": "select p.id, (julianday('now') - julianday(p.birthday)) / 365.25 as age from patient p join examination e on p.id = e.id where e.thrombosis = 1"
  },
  {
    "id": 84,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "For patients with severe degree of thrombosis, list their ID, sex and disease the patient is diagnosed with.",
    "gold_sql": "select distinct t1.id, t1.sex, t1.diagnosis from patient as t1 inner join examination as t2 on t1.id = t2.id where t2.thrombosis = 2",
    "pred_sql": "select p.id, p.sex, e.diagnosis from patient p join examination e on p.id = e.id where e.thrombosis = 1"
  },
  {
    "id": 85,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "gold_sql": "select count(*) from patient where strftime('%y', description) = '1997' and sex = 'f' and admission = '-'",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where p.sex = 'f' and e.`examination date` like '1997-%'"
  },
  {
    "id": 86,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "gold_sql": "select count(*) from patient as t1 inner join examination as t2 on t1.id = t2.id where t1.sex = 'f' and strftime('%y', t2.`examination date`) = '1997' and t2.thrombosis = 1",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where p.sex = 'f' and e.thrombosis = (select max(thrombosis) from examination where extract(year from `examination date`) = 1997)"
  },
  {
    "id": 87,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "gold_sql": "select t2.symptoms, t1.diagnosis from patient as t1 inner join examination as t2 on t1.id = t2.id where t2.symptoms is not null order by t1.birthday desc limit 1",
    "pred_sql": "select e.symptoms, e.diagnosis from examination e join patient p on e.id = p.id where p.birthday = (select min(birthday) from patient)"
  },
  {
    "id": 88,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "gold_sql": "select t1.date, strftime('%y', t2.`first date`) - strftime('%y', t2.birthday),t2.birthday from laboratory as t1 inner join patient as t2 on t1.id = t2.id where t2.diagnosis = 'sjs' and t2.birthday is not null order by t2.birthday asc limit 1",
    "pred_sql": "with oldest_sjs_patient as ( select p.id, p.birthday, l.date from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where e.diagnosis = 'sjs' order by (julianday(l.date) - julianday(p.birthday)) asc limit 1 ) select julianday(l.date) - julianday(p.birthday"
  },
  {
    "id": 89,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "gold_sql": "select cast(sum(case when t2.ua <= 8.0 and t1.sex = 'm' then 1 else 0 end) as real) / sum(case when t2.ua <= 6.5 and t1.sex = 'f' then 1 else 0 end) from patient as t1 inner join laboratory as t2 on t1.id = t2.id",
    "pred_sql": "select count(case when sex = 'm' then 1 else null end) / count(case when sex = 'f' then 1 else null end) as ratio from patient p join laboratory l on p.id = l.id where ua > (select avg(ua) from laboratory)"
  },
  {
    "id": 90,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "gold_sql": "select count(t1.id) from patient as t1 inner join examination as t2 on t1.id = t2.id where strftime('%y', t2.`examination date`) between '1990' and '1993' and strftime('%y', t2.`examination date`) - strftime('%y', t1.birthday) < 18",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where p.birthday > '1987-12-31' and e.`examination date` between '1990-01-01' and '1993-12-31'"
  },
  {
    "id": 91,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "gold_sql": "select strftime('%y', t2.date) - strftime('%y', t1.birthday), t1.diagnosis from patient as t1 inner join laboratory as t2 on t1.id = t2.id order by t2.hgb desc limit 1",
    "pred_sql": "with max_hgb as ( select id, hgb from examination order by hgb desc limit 1 ) select (select birthday from patient where id = (select id from max_hgb)) as birthday, (select diagnosis from examination where id = (select id from max_hgb)) as diagnosis;"
  },
  {
    "id": 92,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "gold_sql": "select `acl iga`, `acl igg`, `acl igm` from examination where id in ( select id from patient where diagnosis = 'sle' and description = '1994-02-19' ) and `examination date` = '1993-11-12'",
    "pred_sql": "select a.`acl igg`, a.`acl igm`, a.`acl iga` from examination a join patient p on a.id = p.id where p.diagnosis = 'sle' and a.`examination date` = '1993-11-12'"
  },
  {
    "id": 93,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "gold_sql": "select cast((sum(case when t2.date like '1981-11-%' then t2.`t-cho` else 0 end) - sum(case when t2.date like '1981-12-%' then t2.`t-cho` else 0 end)) as real) / sum(case when t2.date like '1981-12-%' then t2.`t-cho` else 0 end) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.birthday = '1959-02-18'",
    "pred_sql": "select (select t-cho from laboratory where id in (select id from patient where birthday = '1959-02-18') and date between '1981-11-01' and '1981-12-31' order by date desc limit 1) - (select t-cho from laboratory where id in (select id from patient where birthday = '1959-02-18') and date between '1981-10-01' and '1981-10-"
  },
  {
    "id": 94,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "gold_sql": "select distinct id from laboratory where date between '1987-07-06' and '1996-01-31' and gpt > 30 and alb < 4",
    "pred_sql": "select p.id from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where e.`examination date` between '1987-07-06' and '1996-01-31' and l.gpt > 30 and l.alb < 4"
  },
  {
    "id": 95,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "gold_sql": "select count(*) from examination where thrombosis = 2 and `ana pattern` = 's' and `acl igm` > (select avg(`acl igm`) * 1.2 from examination where thrombosis = 2 and `ana pattern` = 's')",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where e.thrombosis = 2 and e.`ana pattern` = 's' and e.`acl igm` > (select avg(`acl igm`) from examination where `ana pattern` = 's') + 20"
  },
  {
    "id": 96,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "gold_sql": "select distinct t1.id from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.admission = '-' and t2.`t-bil` < 2.0 and t2.date like '1991-10-%'",
    "pred_sql": "select p.id, p.sex, p.birthday, p.description, p.`first date`, p.admission, p.diagnosis from patient p join laboratory l on p.id = l.id where l.date like '1991-10-%' and `t-bil` between 0 and 1.2"
  },
  {
    "id": 97,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "gold_sql": "select avg(t2.alb) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.plt > 400 and t1.diagnosis = 'sle' and t1.sex = 'f'",
    "pred_sql": "select avg(alb) from laboratory where id in (select id from patient where sex='f' and diagnosis='sle') and plt > 400"
  },
  {
    "id": 98,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "How many female patients were given an APS diagnosis?",
    "gold_sql": "select count(id) from patient where sex = 'f' and diagnosis = 'aps'",
    "pred_sql": "select count(*) from patient p join diagnosis d on p.id = d.id where p.sex = 'f' and d.diagnosis = 'aps'"
  },
  {
    "id": 99,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "gold_sql": "select cast(sum(case when sex = 'f' then 1 else 0 end) as real) * 100 / count(id) from patient where diagnosis = 'ra' and strftime('%y', birthday) = '1980'",
    "pred_sql": "select 100.0 * count(case when birthday like '1980-%' and diagnosis = 'ra' and sex = 'f' then 1 else null end) / count(case when birthday like '1980-%' and diagnosis = 'ra' then 1 else null end) as percentage from patient"
  },
  {
    "id": 100,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Was the patient with the number 57266's uric acid within a normal range?",
    "gold_sql": "select case when (t1.sex = 'f' and t2.ua > 6.5) or (t1.sex = 'm' and t2.ua > 8.0) then true else false end from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.id = 57266",
    "pred_sql": "select * from laboratory where id = 57266 and ua between (select min(ua) from laboratory) and (select max(ua) from laboratory)"
  },
  {
    "id": 101,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "gold_sql": "select distinct t1.id from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.sex = 'm' and t2.gpt >= 60",
    "pred_sql": "select id from patient where sex = 'm' and id in (select id from laboratory where gpt > (select avg(gpt) from laboratory))"
  },
  {
    "id": 102,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "gold_sql": "select distinct t1.diagnosis from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.gpt > 60 order by t1.birthday asc",
    "pred_sql": "with diagnosis as ( select p.id, p.birthday, e.diagnosis, l.date from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where l.alp > (select avg(alp) from laboratory) and e.diagnosis is not null ) select d.id, d.birthday, d.diagnosis, d.date from diagnosis d order by d.birthday asc"
  },
  {
    "id": 103,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "gold_sql": "select distinct t1.id, t1.sex, t1.birthday from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.un = 29",
    "pred_sql": "select p.id, p.sex, p.birthday from patient p where p.id in (select l.id from laboratory l where l.id = p.id and l.un between 15 and 35)"
  },
  {
    "id": 104,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "gold_sql": "select t1.id,t1.sex from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.`t-bil` >= 2.0 group by t1.sex,t1.id",
    "pred_sql": "select p.sex, count(*) from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where l.`t-bil` > (select avg(`t-bil`) from laboratory) group by p.sex"
  },
  {
    "id": 105,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What is the average age of the male patient with high cholesterol?",
    "gold_sql": "select avg(strftime('%y', date('now')) - strftime('%y', t1.birthday)) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.`t-cho` >= 250 and t1.sex = 'm'",
    "pred_sql": "select avg(datediff('now', birthday)/365.25) as average_age from patient where sex = 'm' and exists (select 1 from laboratory where id = patient.id and t-cho > 200)"
  },
  {
    "id": 106,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.tg >= 200 and strftime('%y', current_timestamp) - strftime('%y', t1.birthday) > 50",
    "pred_sql": "select count(*) from patient p join laboratory l on p.id = l.id where l.tg > (select avg(tg) from laboratory) and p.birthday < '1950-01-01'"
  },
  {
    "id": 107,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where strftime('%y', t1.birthday) between '1936' and '1956' and t1.sex = 'm' and t2.cpk >= 250",
    "pred_sql": "select count(*) from patient p join laboratory l on p.id = l.id where p.birthday between '1936-01-01' and '1956-12-31' and p.sex = 'm' and l.cpk > (select avg(cpk) from laboratory)"
  },
  {
    "id": 108,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "gold_sql": "select distinct t1.id, t1.sex , strftime('%y', current_timestamp) - strftime('%y', t1.birthday) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.glu >= 180 and t2.`t-cho` < 250",
    "pred_sql": "select p.id, p.sex, (julianday('now') - julianday(p.birthday)) / 365.25 as age from patient p where not exists (select 1 from laboratory l where l.id = p.id and l.glu between 70 and 110) and exists (select 1 from laboratory l where l.id = p.id and l.`t-cho` between 150 and 240)"
  },
  {
    "id": 109,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "gold_sql": "select distinct t1.diagnosis, t1.id , strftime('%y', current_timestamp) -strftime('%y', t1.birthday) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.rbc < 3.5",
    "pred_sql": "select p.id, datediff(p.birthday, '0001-01-01') as age from patient p join laboratory l on p.id = l.id where l.rbc < 4.5"
  },
  {
    "id": 110,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "gold_sql": "select t1.id, t1.sex from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.diagnosis = 'sle' and t2.hgb > 10 and t2.hgb < 17 order by t1.birthday asc limit 1",
    "pred_sql": "select p.id, p.sex from patient p join diagnosis d on p.id = d.id join examination e on p.id = e.id where d.diagnosis = 'sle' and e.hgb = e.hgb"
  },
  {
    "id": 111,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "gold_sql": "select distinct t1.id, strftime('%y', current_timestamp) - strftime('%y', t1.birthday) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t1.id in ( select id from laboratory where hct >= 52 group by id having count(id) >= 2 )",
    "pred_sql": "select p.id, (julianday('now') - julianday(p.birthday)) / 365.25 as age from patient p join laboratory l on p.id = l.id where p.id in (select id from laboratory group by id having count(*) > 1 and max(l.hgb) > 14.5 or max(l.hgb) < 13.5)"
  },
  {
    "id": 112,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "gold_sql": "select sum(case when t2.plt <= 100 then 1 else 0 end) - sum(case when t2.plt >= 400 then 1 else 0 end) from patient as t1 inner join laboratory as t2 on t1.id = t2.id",
    "pred_sql": "select count(case when plt < (select avg(plt) from laboratory) then 1 else null end) as 'lower than normal', count(case when plt > (select avg(plt) from laboratory) then 1 else null end) as 'higher than normal' from patient p join laboratory l on p.id = l.id"
  },
  {
    "id": 113,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "gold_sql": "select distinct t1.id from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.plt between 100 and 400 and strftime('%y', t2.date) - strftime('%y', t1.birthday) < 50 and strftime('%y', t2.date) = '1984'",
    "pred_sql": "select p.id, p.sex, p.birthday from patient p join laboratory l on p.id = l.id where l.date between '1984-01-01' and '1984-12-31' and p.birthday > date('now', '-50 year') and l.plt = 0"
  },
  {
    "id": 114,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "gold_sql": "select cast(sum(case when t2.pt >= 14 and t1.sex = 'f' then 1 else 0 end) as real) * 100 / count(case when t2.pt >= 14 then 1 else 0 end) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where strftime('%y', current_timestamp) - strftime('%y', t1.birthday) > 55",
    "pred_sql": "select 100.0 * count(case when sex = 'f' and pt > 1.0 then 1 else null end) / count(*) as percentage from patient where birthday < date('now', '-55 year')"
  },
  {
    "id": 115,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.fg <= 150 or t2.fg >= 450 and t2.wbc > 3.5 and t2.wbc < 9.0 and t1.sex = 'm'",
    "pred_sql": "select count(*) from patient p join laboratory l on p.id = l.id where p.sex = 'm' and wbc = 6.4 and fg > 0.6"
  },
  {
    "id": 116,
    "db_id": "thrombosis_prediction",
    "difficulty": "simple",
    "question": "How many patients with an Ig G higher than normal?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id inner join examination as t3 on t3.id = t2.id where t2.igg >= 2000",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where e.`acl igg` > (select avg(`acl igg`) from examination)"
  },
  {
    "id": 117,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "gold_sql": "select count(t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id inner join examination as t3 on t3.id = t2.id where t2.igg between 900 and 2000 and t3.symptoms is not null",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where e.`acl igg` = 0 and e.symptoms is not null"
  },
  {
    "id": 118,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "gold_sql": "select count(t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.iga between 80 and 500 and strftime('%y', t1.`first date`) > '1990'",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where e.`acl iga` = 0 and e.`examination date` > '1990-01-01'"
  },
  {
    "id": 119,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "gold_sql": "select t1.diagnosis from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.igm not between 40 and 400 group by t1.diagnosis order by count(t1.diagnosis) desc limit 1",
    "pred_sql": "with abnormal_igm as ( select diagnosis, count(*) as count from examination where `acl igm` > 0 group by diagnosis order by count desc ) select diagnosis from abnormal_igm where count = (select max(count) from abnormal_igm)"
  },
  {
    "id": 120,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many patients with a abnormal C-reactive protein don't have their data recorded?",
    "gold_sql": "select count(t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where (t2.crp = '+' ) and t1.description is null",
    "pred_sql": "select count(*) from patient where id not in (select id from laboratory where crp is not null)"
  },
  {
    "id": 121,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.cre >= 1.5 and strftime('%y', date('now')) - strftime('%y', t1.birthday) < 70",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where l.cre > 0 and p.birthday > '1970-01-01'"
  },
  {
    "id": 122,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.rnp = 'negative' or t2.rnp = '0' and t1.admission = '+'",
    "pred_sql": "select count(distinct p.id) from patient p join laboratory l on p.id = l.id where l.rnp = 'none' and admission = '+'"
  },
  {
    "id": 123,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Among the patients with normal anti-SM, how many of them does not have thrombosis?",
    "gold_sql": "select count(t1.id) from examination as t1 inner join laboratory as t2 on t1.id = t2.id where t2.sm in ('negative','0') and t1.thrombosis = 0",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id where e.thrombosis = 0 and e.`ana pattern` not like '%sm%'"
  },
  {
    "id": 124,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id inner join examination as t3 on t3.id = t2.id where (t2.sc170 = 'negative' or t2.sc170 = '0') and t1.sex = 'f' and t3.symptoms is null",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where e.`ana pattern` = 'none' and e.symptoms = 'none' and p.sex = 'f'"
  },
  {
    "id": 125,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "gold_sql": "select count(distinct t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.centromea in ('negative', '0') and t2.ssb in ('negative', '0') and t1.sex = 'm'",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where e.`acl iga` = 0 and e.`ssa` = 'none' and p.sex = 'm'"
  },
  {
    "id": 126,
    "db_id": "thrombosis_prediction",
    "difficulty": "moderate",
    "question": "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "gold_sql": "select t1.birthday from patient as t1 inner join laboratory as t2 on t1.id = t2.id where t2.got >= 60 order by t1.birthday desc limit 1",
    "pred_sql": "select min(birthday) from patient p join laboratory l on p.id = l.id where l.got > 36 or l.gpt > 36"
  },
  {
    "id": 127,
    "db_id": "thrombosis_prediction",
    "difficulty": "challenging",
    "question": "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "gold_sql": "select count(t1.id) from patient as t1 inner join laboratory as t2 on t1.id = t2.id inner join examination as t3 on t1.id = t3.id where t2.cpk < 250 and (t3.kct = '+' or t3.rvvt = '+' or t3.lac = '+')",
    "pred_sql": "select count(*) from patient p join examination e on p.id = e.id join laboratory l on p.id = l.id where e.thrombosis = 0 and l.cpk between 0 and 200"
  },
  {
    "id": 128,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "Give the name of the league had the most goals in the 2016 season?",
    "gold_sql": "select t2.name from match as t1 inner join league as t2 on t1.league_id = t2.id where t1.season = '2015/2016' group by t2.name order by sum(t1.home_team_goal + t1.away_team_goal) desc limit 1",
    "pred_sql": "select name from league where id in (select league_id from match where extract(year from date) = 2016 group by league_id order by sum(home_team_goal + away_team_goal) desc limit 1)"
  },
  {
    "id": 129,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "In Scotland Premier League, which away team won the most during the 2010 season?",
    "gold_sql": "select teaminfo.team_long_name from league as leaguedata inner join match as matchdata on leaguedata.id = matchdata.league_id inner join team as teaminfo on matchdata.away_team_api_id = teaminfo.team_api_id where leaguedata.name = 'scotland premier league' and matchdata.season = '2009/2010' and matchdata.away_team_goal - matchdata.home_team_goal > 0 group by matchdata.away_team_api_id order by count(*) desc limit 1",
    "pred_sql": "with away_wins as ( select away_team_api_id, count(*) as wins from match where season = '2010/2011' and league_id = (select id from league where name = 'scotland premier league') group by away_team_api_id ) select away_team_api_id from away_wins order by wins desc limit 1"
  },
  {
    "id": 130,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "gold_sql": "select t1.buildupplayspeed from team_attributes as t1 inner join team as t2 on t1.team_api_id = t2.team_api_id order by t1.buildupplayspeed asc limit 4",
    "pred_sql": "with top_4_teams as ( select team_fifa_api_id, avg(buildupplayspeed) as avg_build_up_play_speed from team_attributes group by team_fifa_api_id order by avg_build_up_play_speed desc limit 4 ) select ta.team_fifa_api_id, ta.buildupplayspeed, ta.buildupplayspeedclass from team_attributes ta join top_4_teams"
  },
  {
    "id": 131,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "Give the name of the league had the most matches end as draw in the 2016 season?",
    "gold_sql": "select t2.name from match as t1 inner join league as t2 on t1.league_id = t2.id where t1.season = '2015/2016' and t1.home_team_goal = t1.away_team_goal group by t2.name order by count(t1.id) desc limit 1",
    "pred_sql": "select name from league where id in (select league_id from match where extract(year from date) = 2016 and home_team_goal = away_team_goal)"
  },
  {
    "id": 132,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "gold_sql": "select distinct datetime() - t2.birthday age from player_attributes as t1 inner join player as t2 on t1.player_api_id = t2.player_api_id where strftime('%y',t1.`date`) >= '2013' and strftime('%y',t1.`date`) <= '2015' and t1.sprint_speed >= 97",
    "pred_sql": "with player_attributes as ( select p.player_api_id, p.player_name, pa.date, pa.sprint_speed from player p join player_attributes pa on p.player_api_id = pa.player_fifa_api_id where pa.date between '2013-01-01' and '2015-12-31' and pa.sprint_speed >= 97 ) select pa.player_api_id, p.player_name, datediff(pa.date, p.birthday"
  },
  {
    "id": 133,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "gold_sql": "select t2.name, t1.max_count from league as t2 join (select league_id, max(cnt) as max_count from (select league_id, count(id) as cnt from match group by league_id) as subquery) as t1 on t1.league_id = t2.id",
    "pred_sql": "with league_matches as ( select league_id, count(*) as num_matches from match group by league_id ) select league.name, num_matches from league_matches join league on league.id = league_matches.league_id order by num_matches desc limit 1"
  },
  {
    "id": 134,
    "db_id": "european_football_2",
    "difficulty": "simple",
    "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "gold_sql": "select distinct team_fifa_api_id from team_attributes where buildupplayspeed > 50 and buildupplayspeed < 60",
    "pred_sql": "select team_fifa_api_id from team_attributes where buildupplayspeed between 50 and 60"
  },
  {
    "id": 135,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "List the long name of teams with above-average build-up play passing in 2012.",
    "gold_sql": "select distinct t4.team_long_name from team_attributes as t3 inner join team as t4 on t3.team_api_id = t4.team_api_id where substr(t3.`date`, 1, 4) = '2012' and t3.buildupplaypassing > ( select cast(sum(t2.buildupplaypassing) as real) / count(t1.id) from team as t1 inner join team_attributes as t2 on t1.team_api_id = t2.team_api_id where strftime('%y',t2.`date`) = '2012')",
    "pred_sql": "select t.team_long_name from team_attributes ta join team t on ta.team_fifa_api_id = t.team_fifa_api_id where ta.date like '2012-%' and ta.buildupplaypassing > (select avg(buildupplaypassing) from team_attributes where date like '2012-%')"
  },
  {
    "id": 136,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "gold_sql": "select cast(count(case when t2.preferred_foot = 'left' then t1.id else null end) as real) * 100 / count(t1.id) percent from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where substr(t1.birthday, 1, 4) between '1987' and '1992'",
    "pred_sql": "select count(*) * 100.0 / (select count(*) from player where birthday between '1987-01-01' and '1992-12-31' and preferred_foot = 'left') as percentage from player where birthday between '1987-01-01' and '1992-12-31' and preferred_foot = 'left'"
  },
  {
    "id": 137,
    "db_id": "european_football_2",
    "difficulty": "simple",
    "question": "Find the average number of long-shot done by Ahmed Samir Farag.",
    "gold_sql": "select cast(sum(t2.long_shots) as real) / count(t2.`date`) from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t1.player_name = 'ahmed samir farag'",
    "pred_sql": "select avg(long_shots) as average_long_shots from player_attributes where player_name = 'ahmed samir farag'"
  },
  {
    "id": 138,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "gold_sql": "select t1.player_name from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t1.height > 180 group by t1.id order by cast(sum(t2.heading_accuracy) as real) / count(t2.`player_fifa_api_id`) desc limit 10",
    "pred_sql": "select p.player_name, avg(pa.heading_accuracy) as avg_heading_accuracy from player p join player_attributes pa on p.player_api_id = pa.player_api_id where p.height > 180 group by p.player_name order by avg_heading_accuracy desc limit 10"
  },
  {
    "id": 139,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "gold_sql": "select t1.name from league as t1 inner join match as t2 on t1.id = t2.league_id where t2.season = '2009/2010' group by t1.name having (cast(sum(t2.home_team_goal) as real) / count(distinct t2.id)) - (cast(sum(t2.away_team_goal) as real) / count(distinct t2.id)) > 0",
    "pred_sql": "select name from league where id in (select league_id from match where season = '2008/2009' group by league_id having avg(home_team_goal) > avg(away_team_goal))"
  },
  {
    "id": 140,
    "db_id": "european_football_2",
    "difficulty": "simple",
    "question": "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "gold_sql": "select player_name from player where substr(birthday, 1, 7) = '1970-10'",
    "pred_sql": "select * from player where strftime('%y', birthday) = '1970' and strftime('%m', birthday) = '10'"
  },
  {
    "id": 141,
    "db_id": "european_football_2",
    "difficulty": "simple",
    "question": "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "gold_sql": "select t2.overall_rating from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t1.player_name = 'gabriel tamas' and strftime('%y', t2.date) = '2011'",
    "pred_sql": "select avg(overall_rating) from player_attributes where player_fifa_api_id in (select player_fifa_api_id from player where player_name = 'gabriel tamas') and date like '2011-%'"
  },
  {
    "id": 142,
    "db_id": "european_football_2",
    "difficulty": "moderate",
    "question": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "gold_sql": "select cast(sum(t2.home_team_goal) as real) / count(t2.id) from country as t1 inner join match as t2 on t1.id = t2.country_id where t1.name = 'poland' and t2.season = '2010/2011'",
    "pred_sql": "select avg(home_team_goal) from match where country_id = (select id from country where name = 'poland') and season = '2010/2011'"
  },
  {
    "id": 143,
    "db_id": "european_football_2",
    "difficulty": "challenging",
    "question": "Who has the highest average finishing rate between the highest and shortest football player?",
    "gold_sql": "select a from ( select avg(finishing) result, 'max' a from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t1.height = ( select max(height) from player ) union select avg(finishing) result, 'min' a from player as t1 inner join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t1.height = ( select min(height) from player ) ) order by result desc limit 1",
    "pred_sql": "select avg(f.finishing) as avg_finishing_rate from player p join player_attributes pa on p.player_api_id = pa.player_api_id where p.height = (select max(height) from player) or p.height = (select min(height) from player) group by p.player_api_id"
  }
]